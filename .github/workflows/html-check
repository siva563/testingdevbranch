name: HTML Structure Check

on:
  push:
    branches:
      - '*'  # Trigger on push to any branch
  pull_request:
    branches:
      - main  # Trigger on pull request to main

jobs:
  html-check:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14'  # Specify your desired Node.js version

    - name: Install dependencies
      run: |
        npm install -g htmlhint
        npm install --save-dev jest jsdom

    - name: Validate HTML structure
      run: |
        htmlhint **/*.html > htmlhint-results.txt || echo "HTMLHint failed!" > htmlhint-results.txt
        echo "HTML validation completed." >> htmlhint-results.txt

    - name: Run HTML structure tests
      run: |
        echo "const fs = require('fs');" > test.js
        echo "const { JSDOM } = require('jsdom');" >> test.js
        echo "const filePath = './index.html';" >> test.js  # Change to your HTML file
        echo "const content = fs.readFileSync(filePath, 'utf-8');" >> test.js
        echo "const dom = new JSDOM(content);" >> test.js
        echo "const document = dom.window.document;" >> test.js
        echo "test('HTML should contain the required elements', () => {" >> test.js
        echo "  expect(document.querySelector('header')).toBeTruthy();" >> test.js  # Example element
        echo "  expect(document.querySelector('footer')).toBeTruthy();" >> test.js  # Example element
        echo "  expect(document.querySelector('main')).toBeTruthy();" >> test.js  # Example element
        echo "});" >> test.js
        echo "module.exports = {}; " >> test.js

        # Run the tests and save the output
        node test.js > jest-results.txt || echo "Tests failed!" > jest-results.txt

    - name: Save results as artifacts
      uses: actions/upload-artifact@v3
      with:
        name: html-check-results
        path: |
          htmlhint-results.txt
          jest-results.txt
